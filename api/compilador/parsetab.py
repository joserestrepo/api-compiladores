
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CADENA COMILLAS CORCHETE1 CORCHETE2 DELIMITADOR1 DELIMITADOR2 DIFERENTE DURANTE ENTERO ENTRE ID IGUAL IGUALIGUAL LETRA MAS MAYOR MAYORQUE MENOR MENORQUE MENOS NUMERO PARA POR SEPARADOR SI SINOcuerpo_fun : lista_sentencias cuerpo_estructura : DELIMITADOR1 lista_sentencias DELIMITADOR1lista_sentencias :  sentencias lista_sentencias\n    |   emptysentencias : var_declaration\n    |   fun_declaraciones \n    |   emptyvar_declaration : ENTERO ID\n    |   LETRA ID\n    |   ENTERO ID IGUAL NUMERO\n    |   ENTERO ID IGUAL ID\n    |   LETRA ID IGUAL ID \n    |   LETRA ID IGUAL CADENA\n    |   empty fun_declaraciones : fun_iteracion fun_declaraciones\n    |   emptyfun_iteracion : PARA CORCHETE1 var IGUAL NUMERO SEPARADOR var IGUALIGUAL NUMERO CORCHETE2 cuerpo_estructura\n    |   DURANTE CORCHETE1 expression CORCHETE2 cuerpo_estructura \n    |   SI CORCHETE1 expression CORCHETE2 cuerpo_estructura lista_final_silista_final_si : final_si lista_final_si\n    |  empty \n    final_si : SINO SI CORCHETE1 expression CORCHETE2 cuerpo_estructura\n    |   SINO cuerpo_estructura\n    |   emptyexpression : var operadores var\n    | NUMERO operadores NUMERO\n    | NUMERO operadores var\n    | var operadores NUMERO operadores : MENOR \n    |   MENORQUE\n    |   MAYOR\n    |   MAYORQUE\n    |   DIFERENTE\n    |   IGUALIGUALvar : IDempty :'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,9,13,14,15,16,17,29,30,31,32,45,51,54,55,56,59,60,62,69,70,],[-36,0,-1,-36,-4,-5,-6,-36,-3,-8,-9,-15,-16,-11,-10,-12,-13,-18,-36,-19,-36,-21,-2,-20,-23,-17,-22,]),'ENTERO':([0,3,4,5,6,9,14,15,16,17,29,30,31,32,45,46,51,54,55,56,59,60,62,69,70,],[7,7,-7,-5,-6,-36,-8,-9,-15,-16,-11,-10,-12,-13,-18,7,-36,-19,-36,-21,-2,-20,-23,-17,-22,]),'LETRA':([0,3,4,5,6,9,14,15,16,17,29,30,31,32,45,46,51,54,55,56,59,60,62,69,70,],[8,8,-7,-5,-6,-36,-8,-9,-15,-16,-11,-10,-12,-13,-18,8,-36,-19,-36,-21,-2,-20,-23,-17,-22,]),'PARA':([0,3,4,5,6,9,14,15,16,17,29,30,31,32,45,46,51,54,55,56,59,60,62,69,70,],[10,10,-7,-5,-6,10,-8,-9,-15,-16,-11,-10,-12,-13,-18,10,-36,-19,-36,-21,-2,-20,-23,-17,-22,]),'DURANTE':([0,3,4,5,6,9,14,15,16,17,29,30,31,32,45,46,51,54,55,56,59,60,62,69,70,],[11,11,-7,-5,-6,11,-8,-9,-15,-16,-11,-10,-12,-13,-18,11,-36,-19,-36,-21,-2,-20,-23,-17,-22,]),'SI':([0,3,4,5,6,9,14,15,16,17,29,30,31,32,45,46,51,54,55,56,57,59,60,62,69,70,],[12,12,-7,-5,-6,12,-8,-9,-15,-16,-11,-10,-12,-13,-18,12,-36,-19,-36,-21,61,-2,-20,-23,-17,-22,]),'DELIMITADOR1':([3,4,5,6,9,13,14,15,16,17,29,30,31,32,34,43,45,46,51,53,54,55,56,57,59,60,62,67,68,69,70,],[-36,-4,-5,-6,-36,-3,-8,-9,-15,-16,-11,-10,-12,-13,46,46,-18,-36,-36,59,-19,-36,-21,46,-2,-20,-23,46,46,-17,-22,]),'ID':([7,8,18,19,20,21,22,35,36,37,38,39,40,41,42,52,64,],[14,15,24,24,24,29,31,24,-29,-30,-31,-32,-33,-34,24,24,24,]),'CORCHETE1':([10,11,12,61,],[18,19,20,64,]),'IGUAL':([14,15,23,24,],[21,22,33,-35,]),'NUMERO':([19,20,21,33,35,36,37,38,39,40,41,42,63,64,],[27,27,30,44,48,-29,-30,-31,-32,-33,-34,49,65,27,]),'CADENA':([22,],[32,]),'MENOR':([24,26,27,],[-35,36,36,]),'MENORQUE':([24,26,27,],[-35,37,37,]),'MAYOR':([24,26,27,],[-35,38,38,]),'MAYORQUE':([24,26,27,],[-35,39,39,]),'DIFERENTE':([24,26,27,],[-35,40,40,]),'IGUALIGUAL':([24,26,27,58,],[-35,41,41,63,]),'CORCHETE2':([24,25,28,47,48,49,50,65,66,],[-35,34,43,-25,-28,-26,-27,67,68,]),'SEPARADOR':([44,],[52,]),'SINO':([51,55,56,59,62,70,],[57,57,-24,-2,-23,-22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo_fun':([0,],[1,]),'lista_sentencias':([0,3,46,],[2,13,53,]),'sentencias':([0,3,46,],[3,3,3,]),'empty':([0,3,9,46,51,55,],[4,4,17,4,56,56,]),'var_declaration':([0,3,46,],[5,5,5,]),'fun_declaraciones':([0,3,9,46,],[6,6,16,6,]),'fun_iteracion':([0,3,9,46,],[9,9,9,9,]),'var':([18,19,20,35,42,52,64,],[23,26,26,47,50,58,26,]),'expression':([19,20,64,],[25,28,66,]),'operadores':([26,27,],[35,42,]),'cuerpo_estructura':([34,43,57,67,68,],[45,51,62,69,70,]),'lista_final_si':([51,55,],[54,60,]),'final_si':([51,55,],[55,55,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo_fun","S'",1,None,None,None),
  ('cuerpo_fun -> lista_sentencias','cuerpo_fun',1,'p_cuerpo_fun','parser.py',12),
  ('cuerpo_estructura -> DELIMITADOR1 lista_sentencias DELIMITADOR1','cuerpo_estructura',3,'p_cuerpo_estructura','parser.py',17),
  ('lista_sentencias -> sentencias lista_sentencias','lista_sentencias',2,'p_lista_sentencias','parser.py',22),
  ('lista_sentencias -> empty','lista_sentencias',1,'p_lista_sentencias','parser.py',23),
  ('sentencias -> var_declaration','sentencias',1,'p_sentencias','parser.py',29),
  ('sentencias -> fun_declaraciones','sentencias',1,'p_sentencias','parser.py',30),
  ('sentencias -> empty','sentencias',1,'p_sentencias','parser.py',31),
  ('var_declaration -> ENTERO ID','var_declaration',2,'p_var_declaration','parser.py',36),
  ('var_declaration -> LETRA ID','var_declaration',2,'p_var_declaration','parser.py',37),
  ('var_declaration -> ENTERO ID IGUAL NUMERO','var_declaration',4,'p_var_declaration','parser.py',38),
  ('var_declaration -> ENTERO ID IGUAL ID','var_declaration',4,'p_var_declaration','parser.py',39),
  ('var_declaration -> LETRA ID IGUAL ID','var_declaration',4,'p_var_declaration','parser.py',40),
  ('var_declaration -> LETRA ID IGUAL CADENA','var_declaration',4,'p_var_declaration','parser.py',41),
  ('var_declaration -> empty','var_declaration',1,'p_var_declaration','parser.py',42),
  ('fun_declaraciones -> fun_iteracion fun_declaraciones','fun_declaraciones',2,'p_fun_declaraciones','parser.py',46),
  ('fun_declaraciones -> empty','fun_declaraciones',1,'p_fun_declaraciones','parser.py',47),
  ('fun_iteracion -> PARA CORCHETE1 var IGUAL NUMERO SEPARADOR var IGUALIGUAL NUMERO CORCHETE2 cuerpo_estructura','fun_iteracion',11,'p_fun_iteracion','parser.py',51),
  ('fun_iteracion -> DURANTE CORCHETE1 expression CORCHETE2 cuerpo_estructura','fun_iteracion',5,'p_fun_iteracion','parser.py',52),
  ('fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura lista_final_si','fun_iteracion',6,'p_fun_iteracion','parser.py',53),
  ('lista_final_si -> final_si lista_final_si','lista_final_si',2,'p_lista_final_si','parser.py',57),
  ('lista_final_si -> empty','lista_final_si',1,'p_lista_final_si','parser.py',58),
  ('final_si -> SINO SI CORCHETE1 expression CORCHETE2 cuerpo_estructura','final_si',6,'p_final_si','parser.py',62),
  ('final_si -> SINO cuerpo_estructura','final_si',2,'p_final_si','parser.py',63),
  ('final_si -> empty','final_si',1,'p_final_si','parser.py',64),
  ('expression -> var operadores var','expression',3,'p_expression','parser.py',67),
  ('expression -> NUMERO operadores NUMERO','expression',3,'p_expression','parser.py',68),
  ('expression -> NUMERO operadores var','expression',3,'p_expression','parser.py',69),
  ('expression -> var operadores NUMERO','expression',3,'p_expression','parser.py',70),
  ('operadores -> MENOR','operadores',1,'p_operadores','parser.py',76),
  ('operadores -> MENORQUE','operadores',1,'p_operadores','parser.py',77),
  ('operadores -> MAYOR','operadores',1,'p_operadores','parser.py',78),
  ('operadores -> MAYORQUE','operadores',1,'p_operadores','parser.py',79),
  ('operadores -> DIFERENTE','operadores',1,'p_operadores','parser.py',80),
  ('operadores -> IGUALIGUAL','operadores',1,'p_operadores','parser.py',81),
  ('var -> ID','var',1,'p_var','parser.py',92),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',97),
]
